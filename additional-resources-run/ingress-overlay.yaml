---
apiVersion: v1
kind: Secret
metadata:
  name: ingress-overlay
stringData:
  ingress-overlay.yaml: |
    #@ load("@ytt:overlay", "overlay")
    #@ load("@ytt:yaml", "yaml")
    #@ load("@ytt:data", "data")
    
    #@ def append_hostname(left):
    #@  rules = yaml.decode(yaml.encode(left))
    #@  for rule in rules:
    #!    Safety check. If there is as a .com then assume domain is there
    #@    if rule.get("host").find(".com") > 0:
    #@      hostname = rule.get("host")
    #@    else:     
    #@      hostname = rule.get("host") + data.values.domain
    #@    end 
    #@    rule.update({"host": hostname})
    #@  end
    #@  return rules
    #@ end
    #@overlay/match by=overlay.subset({"kind": "Ingress","apiVersion": "networking.k8s.io/v1"}), expects="0+"
    ---
    spec:
    #@overlay/replace via=lambda left, _: append_hostname(left)
      rules:
