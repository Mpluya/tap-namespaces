#@ load("@ytt:yaml", "yaml")
#@ load("@ytt:data", "data")

---

#@ def namespaces():
- ["justin", "java"]
- ["mae", "dotnet"]
- ["aiden", "java"]
- ["travis", "java"]
#@ end

---
#@ def namespace(name):
apiVersion: v1
kind: Namespace
metadata:
  name: #@ name
  labels:
    apps.tanzu.vmware.com/tap-ns: ""
#@ end

---

#@ for val in namespaces():
--- #@ namespace(val[0])
#@ end

---
#@ def config():
namespaces:
#@ for val in namespaces():
- name: #@ val[0]
  language: #@ val[1]
  scanpolicy: lax-scan-policy
#@ end
#@ end
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: desired-namespaces
  namespace: tap-namespace-provisioning
  annotations:
    kapp.k14s.io/create-strategy: fallback-on-update
    namespace-provisioner.apps.tanzu.vmware.com/no-overwrite: "" #! This annotation tells the provisioner app to not override this configMap as this is your desired state.
data:
  #@yaml/text-templated-strings
  namespaces.yaml: |
    #@data/values
    ---
    (@= yaml.encode(config()) @)