#@ load("@ytt:data", "data")
#@ def in_list(key, list):
#@  return hasattr(data.values.tap_values, key) and (data.values.tap_values[key] in list)
#@ end
#@ if/end in_list('supply_chain', ['testing', 'testing_scanning']) and in_list('profile', ['full', 'iterate', 'build']) and hasattr(data.values, "pipelines") and 'node' in data.values.pipelines:
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: developer-defined-tekton-pipeline-node
  labels:
    apps.tanzu.vmware.com/pipeline: "test"
    apps.tanzu.vmware.com/language: "node"  #! (!) required
spec:
  params:
    - name: source-url                       #! (!) required
    - name: source-revision                  #! (!) required
    - name: source-sub-path                  #! (!) optional
      default: ""
  tasks:
    - name: test
      params:
        - name: source-url
          value: $(params.source-url)
        - name: source-revision
          value: $(params.source-revision)
        - name: source-sub-path
          value: $(params.source-sub-path)
      taskSpec:
        params:
          - name: source-url
          - name: source-revision
          - name: source-sub-path
        steps:
          - name: test
            image: circleci/node:14-browsers #! node
            script: |-
              cd `mktemp -d`

              wget -qO- $(params.source-url) | tar xvz -m

              SUB_PATH=$(params.source-sub-path)
              if [ -z ${SUB_PATH:-""} ]; then
                echo "INFO: No subpath provided."
              else
                echo "INFO: Changing directory to $SUB_PATH"
                cd $SUB_PATH
              fi
              export CI=true
              npm install
              npm run test
