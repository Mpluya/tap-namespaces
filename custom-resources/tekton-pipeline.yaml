apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: developer-defined-tekton-pipeline
  labels:
    apps.tanzu.vmware.com/pipeline: test     #! (!) required
spec:
  params:
    - name: source-url                       #! (!) required
    - name: source-revision                  #! (!) required
    - name: source-sub-path                  #! (!) optional
      default: ""
  tasks:
    - name: test
      params:
        - name: source-url
          value: $(params.source-url)
        - name: source-revision
          value: $(params.source-revision)
        - name: source-sub-path
          value: $(params.source-sub-path)
      taskSpec:
        params:
          - name: source-url
          - name: source-revision
          - name: source-sub-path
        steps:
          - name: test
            image: gradle
            script: |-
              cd `mktemp -d`

              # Added the -m in the tar command because spring petclinic was failing without it.  I don't really know why
              # the original file timestamps would matter, but it did.
              wget -qO- $(params.source-url) | tar xvz -m

              SUB_PATH=$(params.source-sub-path)
              if [ -z ${SUB_PATH:-""} ]; then
                echo "INFO: No subpath provided."
              else
                echo "INFO: Changing directory to $SUB_PATH"
                cd $SUB_PATH
              fi

              # ./mvnw test
              # Replacing the above to detect the java type

              PACKAGE_JSON=package.json
              MVNW=mvnw
              GRADLE="build.gradle"
              
              DOTNET_PATTERN="*.csproj"

              if [ -f "$PACKAGE_JSON" ]; then
                  echo "ERROR: Please add param to workload specifying language=node"
                  exit 1
              elif ls $DOTNET_PATTERN 1> /dev/null 2>&1; then
                  echo "ERROR: Please add param to workload specifying language=dotnet"
                  exit 1
              elif [ -f "$MVNW" ]; then
                  ./mvnw test
              elif [ -f "$GRADLE" ]; then
                  # For some reason ./gradlew fails with a file lock permission error
                  # ./gradlew test
                  gradle test --debug
              else 
                  echo "ERROR: Not a supported test framework."
                  exit 1
              fi

